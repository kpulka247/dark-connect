name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release & Build
    runs-on: ubuntu-latest
    outputs:
      new_release_version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Create Release and Build
        id: semantic
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get new version number
        if: steps.semantic.outputs.new_release_published == 'true'
        id: get_version
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        if: steps.get_version.outputs.version != ''
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  publish-chrome:
    name: Publish to Chrome Web Store
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.new_release_version != ''

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./dist

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Publish to Chrome Web Store
        run: |
          npx chrome-webstore-upload-cli upload \
            --source dist/darkconnect-${{ needs.release.outputs.new_release_version }}-chrome.zip \
            --extension-id $CHROME_EXTENSION_ID \
            --client-id $CHROME_CLIENT_ID \
            --client-secret $CHROME_CLIENT_SECRET \
            --refresh-token $CHROME_REFRESH_TOKEN \
            --auto-publish
        env:
          CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
          CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
          CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}

  publish-firefox:
    name: Publish to Firefox AMO
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.new_release_version != ''

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./dist

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Publish to Firefox AMO
        run: |
          npx web-ext sign \
            --source-dir=dist/darkconnect-firefox \
            --artifacts-dir=web-ext-artifacts \
            --channel=listed \
            --no-input
        env:
          WEB_EXT_API_KEY: ${{ secrets.AMO_JWT_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.AMO_JWT_SECRET }}
